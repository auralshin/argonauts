/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ProofofReserve,
  ProofofReserveInterface,
} from "../../../contracts/ProofOfReserve.sol/ProofofReserve";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_balanceToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_auditors",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_cwas",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ArrayLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAuditor",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCWA",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum ProofofReserve.State",
        name: "currentState",
        type: "uint8",
      },
      {
        internalType: "enum ProofofReserve.State",
        name: "stateRequired",
        type: "uint8",
      },
    ],
    name: "InvalidState",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "auditorChallenge",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "auditors",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auditorsArray",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cwaSignatures",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "cwas",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cwasArray",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getAllSignaures",
    outputs: [
      {
        internalType: "bytes[][]",
        name: "",
        type: "bytes[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_auditor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getAuditorChallenge",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
    ],
    name: "getAuditorsChallenge",
    outputs: [
      {
        internalType: "uint256[]",
        name: "nonces",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_auditor",
        type: "address",
      },
    ],
    name: "getSignauresForAuditor",
    outputs: [
      {
        internalType: "bytes[]",
        name: "sigs",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_epoch",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_cwa",
        type: "address",
      },
    ],
    name: "getSignauresForCWA",
    outputs: [
      {
        internalType: "bytes[]",
        name: "sigs",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "getState",
    outputs: [
      {
        internalType: "enum ProofofReserve.State",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nonceUsed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numberOfAuditorsAndCWAs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "pushChallenge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stateCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_sigs",
        type: "bytes[]",
      },
    ],
    name: "submitSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool[]",
        name: "_votes",
        type: "bool[]",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "votes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002bd638038062002bd68339818101604052810190620000379190620004d1565b826000819055508373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505060008251905081518114620000b3576040517fa24a13a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8260049080519060200190620000cb929190620001fa565b508160029080519060200190620000e4929190620001fa565b5060005b81811015620001e6576001600360008684815181106200010d576200010c62000581565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600180600085848151811062000181576200018062000581565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550806001019050620000e8565b5080608081815250505050505050620005b0565b82805482825590600052602060002090810192821562000276579160200282015b82811115620002755782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906200021b565b5b50905062000285919062000289565b5090565b5b80821115620002a45760008160009055506001016200028a565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002e982620002bc565b9050919050565b620002fb81620002dc565b81146200030757600080fd5b50565b6000815190506200031b81620002f0565b92915050565b6000819050919050565b620003368162000321565b81146200034257600080fd5b50565b60008151905062000356816200032b565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003ac8262000361565b810181811067ffffffffffffffff82111715620003ce57620003cd62000372565b5b80604052505050565b6000620003e3620002a8565b9050620003f18282620003a1565b919050565b600067ffffffffffffffff82111562000414576200041362000372565b5b602082029050602081019050919050565b600080fd5b6000620004416200043b84620003f6565b620003d7565b9050808382526020820190506020840283018581111562000467576200046662000425565b5b835b818110156200049457806200047f88826200030a565b84526020840193505060208101905062000469565b5050509392505050565b600082601f830112620004b657620004b56200035c565b5b8151620004c88482602086016200042a565b91505092915050565b60008060008060808587031215620004ee57620004ed620002b2565b5b6000620004fe878288016200030a565b9450506020620005118782880162000345565b935050604085015167ffffffffffffffff811115620005355762000534620002b7565b5b62000543878288016200049e565b925050606085015167ffffffffffffffff811115620005675762000566620002b7565b5b62000575878288016200049e565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60805160a0516125c86200060e60003960006110ee01526000818161084d0152818161088a015281816108c7015281816109680152818161099001528181610e830152818161119d015281816113ce015261166c01526125c86000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c8063936bc49d116100b8578063be1828061161007c578063be182806146103d6578063c3edf423146103f2578063d1a3509d14610422578063d4a18d3d14610452578063eb3f96bc14610482578063ed206b59146104b257610141565b8063936bc49d1461030c57806394d0d3a614610328578063986fc9bc146103585780639d3233f914610388578063a30955af146103b857610141565b806344c9af281161010a57806344c9af281461021057806347f9aa9f1461024057806368b8d26c1461027057806376671808146102a057806376f6a6ac146102be5780638bc32872146102dc57610141565b8062d9750c14610146578063054745ec146101765780632690144b146101a657806335424cfd146101d657806336f4fb0214610206575b600080fd5b610160600480360381019061015b9190611725565b6104ce565b60405161016d9190611966565b60405180910390f35b610190600480360381019061018b91906119e6565b610727565b60405161019d9190611a70565b60405180910390f35b6101c060048036038101906101bb9190611a92565b6107d4565b6040516101cd9190611b00565b60405180910390f35b6101f060048036038101906101eb9190611b1b565b610810565b6040516101fd9190611b00565b60405180910390f35b61020e610830565b005b61022a60048036038101906102259190611725565b610832565b6040516102379190611bbf565b60405180910390f35b61025a60048036038101906102559190611b1b565b610901565b6040516102679190611b00565b60405180910390f35b61028a60048036038101906102859190611725565b610921565b6040516102979190611be9565b60405180910390f35b6102a8610960565b6040516102b59190611c13565b60405180910390f35b6102c6610966565b6040516102d39190611c13565b60405180910390f35b6102f660048036038101906102f191906119e6565b61098a565b6040516103039190611cb4565b60405180910390f35b61032660048036038101906103219190611725565b610b32565b005b610342600480360381019061033d9190611725565b610ce4565b60405161034f9190611b00565b60405180910390f35b610372600480360381019061036d9190611cd6565b610d04565b60405161037f9190611c13565b60405180910390f35b6103a2600480360381019061039d91906119e6565b610e7d565b6040516103af9190611cb4565b60405180910390f35b6103c06110ec565b6040516103cd9190611d75565b60405180910390f35b6103f060048036038101906103eb9190611df5565b611110565b005b61040c60048036038101906104079190611e42565b6112ea565b6040516104199190611a70565b60405180910390f35b61043c60048036038101906104379190611725565b6113b0565b6040516104499190611c13565b60405180910390f35b61046c60048036038101906104679190611725565b6113c8565b6040516104799190611f53565b60405180910390f35b61049c60048036038101906104979190611725565b6115a6565b6040516104a99190611be9565b60405180910390f35b6104cc60048036038101906104c79190611fcb565b6115e5565b005b60606000600280549050905060008167ffffffffffffffff8111156104f6576104f5612018565b5b60405190808252806020026020018201604052801561052957816020015b60608152602001906001900390816105145790505b50905060005b8281101561071c5760008367ffffffffffffffff81111561055357610552612018565b5b60405190808252806020026020018201604052801561058657816020015b60608152602001906001900390816105715790505b50905060005b848110156106f057600860008881526020019081526020016000206000600285815481106105bd576105bc612047565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020818154811061063457610633612047565b5b906000526020600020018054610649906120a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610675906120a5565b80156106c25780601f10610697576101008083540402835291602001916106c2565b820191906000526020600020905b8154815290600101906020018083116106a557829003601f168201915b50505050508282815181106106da576106d9612047565b5b602002602001018190525080600101905061058c565b508083838151811061070557610704612047565b5b60200260200101819052508160010191505061052f565b508092505050919050565b6007602052816000526040600020602052806000526040600020600091509150508054610753906120a5565b80601f016020809104026020016040519081016040528092919081815260200182805461077f906120a5565b80156107cc5780601f106107a1576101008083540402835291602001916107cc565b820191906000526020600020905b8154815290600101906020018083116107af57829003601f168201915b505050505081565b6009602052826000526040600020602052816000526040600020602052806000526040600020600092509250509054906101000a900460ff1681565b60016020528060005260406000206000915054906101000a900460ff1681565b565b600080600660008481526020019081526020016000205490507f000000000000000000000000000000000000000000000000000000000000000060036108789190612105565b81106108885760039150506108fc565b7f000000000000000000000000000000000000000000000000000000000000000060026108b59190612105565b81106108c55760029150506108fc565b7f000000000000000000000000000000000000000000000000000000000000000081106108f65760019150506108fc565b60009150505b919050565b60036020528060005260406000206000915054906101000a900460ff1681565b6002818154811061093157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000081565b606060007f000000000000000000000000000000000000000000000000000000000000000090508067ffffffffffffffff8111156109cb576109ca612018565b5b6040519080825280602002602001820160405280156109fe57816020015b60608152602001906001900390816109e95790505b50915060005b81811015610b2a576008600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110610a6e57610a6d612047565b5b906000526020600020018054610a83906120a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610aaf906120a5565b8015610afc5780601f10610ad157610100808354040283529160200191610afc565b820191906000526020600020905b815481529060010190602001808311610adf57829003601f168201915b5050505050838281518110610b1457610b13612047565b5b6020026020010181905250806001019050610a04565b505092915050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610bb5576040517f653f34c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005600082815260200190815260200160002060009054906101000a900460ff1615610c0d576040517f756688fe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016005600083815260200190815260200160002060006101000a81548160ff02191690831515021790555080604051602001610c4a9190611c13565b604051602081830303815290604052600760008054815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081610cb691906122e9565b5060066000805481526020019081526020016000206000815480929190610cdc906123bb565b919050555050565b60056020528060005260406000206000915054906101000a900460ff1681565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610d89576040517f653f34c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6007600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054610de4906120a5565b80601f0160208091040260200160405190810160405280929190818152602001828054610e10906120a5565b8015610e5d5780601f10610e3257610100808354040283529160200191610e5d565b820191906000526020600020905b815481529060010190602001808311610e4057829003601f168201915b5050505050806020019051810190610e759190612418565b905092915050565b606060007f0000000000000000000000000000000000000000000000000000000000000000905060005b818110156110e4578373ffffffffffffffffffffffffffffffffffffffff1660048281548110610eda57610ed9612047565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036110d9578167ffffffffffffffff811115610f3a57610f39612018565b5b604051908082528060200260200182016040528015610f6d57816020015b6060815260200190600190039081610f585790505b50925060005b828110156110d75760086000878152602001908152602001600020600060028381548110610fa457610fa3612047565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061101b5761101a612047565b5b906000526020600020018054611030906120a5565b80601f016020809104026020016040519081016040528092919081815260200182805461105c906120a5565b80156110a95780601f1061107e576101008083540402835291602001916110a9565b820191906000526020600020905b81548152906001019060200180831161108c57829003601f168201915b50505050508482815181106110c1576110c0612047565b5b6020026020010181905250806001019050610f73565b505b806001019050610ea7565b505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611193576040517fa633d81600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008282905090507f000000000000000000000000000000000000000000000000000000000000000081146111f4576040517fa24a13a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b818110156112ba57600860008054815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084848381811061126357611262612047565b5b90506020028101906112759190612454565b909180600181540180825580915050600190039060005260206000200160009091929091929091929091925091826112ae9291906124c2565b508060010190506111f7565b50600660008054815260200190815260200160002060008154809291906112e0906123bb565b9190505550505050565b6008602052826000526040600020602052816000526040600020818154811061131257600080fd5b906000526020600020016000925092505050805461132f906120a5565b80601f016020809104026020016040519081016040528092919081815260200182805461135b906120a5565b80156113a85780601f1061137d576101008083540402835291602001916113a8565b820191906000526020600020905b81548152906001019060200180831161138b57829003601f168201915b505050505081565b60066020528060005260406000206000915090505481565b606060007f000000000000000000000000000000000000000000000000000000000000000090508067ffffffffffffffff81111561140957611408612018565b5b6040519080825280602002602001820160405280156114375781602001602082028036833780820191505090505b50915060005b8181101561159f5760006004828154811061145b5761145a612047565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506007600086815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546114e3906120a5565b80601f016020809104026020016040519081016040528092919081815260200182805461150f906120a5565b801561155c5780601f106115315761010080835404028352916020019161155c565b820191906000526020600020905b81548152906001019060200180831161153f57829003601f168201915b50505050508060200190518101906115749190612418565b84838151811061158757611586612047565b5b6020026020010181815250508160010191505061143d565b5050919050565b600481815481106115b657600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16611668576040517f653f34c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000090508083839050146116c9576040517fa24a13a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b818110156116df578060010190506116cc565b50505050565b600080fd5b600080fd5b6000819050919050565b611702816116ef565b811461170d57600080fd5b50565b60008135905061171f816116f9565b92915050565b60006020828403121561173b5761173a6116e5565b5b600061174984828501611710565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117e45780820151818401526020810190506117c9565b60008484015250505050565b6000601f19601f8301169050919050565b600061180c826117aa565b61181681856117b5565b93506118268185602086016117c6565b61182f816117f0565b840191505092915050565b60006118468383611801565b905092915050565b6000602082019050919050565b60006118668261177e565b6118708185611789565b9350836020820285016118828561179a565b8060005b858110156118be578484038952815161189f858261183a565b94506118aa8361184e565b925060208a01995050600181019050611886565b50829750879550505050505092915050565b60006118dc838361185b565b905092915050565b6000602082019050919050565b60006118fc82611752565b611906818561175d565b9350836020820285016119188561176e565b8060005b85811015611954578484038952815161193585826118d0565b9450611940836118e4565b925060208a0199505060018101905061191c565b50829750879550505050505092915050565b6000602082019050818103600083015261198081846118f1565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119b382611988565b9050919050565b6119c3816119a8565b81146119ce57600080fd5b50565b6000813590506119e0816119ba565b92915050565b600080604083850312156119fd576119fc6116e5565b5b6000611a0b85828601611710565b9250506020611a1c858286016119d1565b9150509250929050565b600082825260208201905092915050565b6000611a42826117aa565b611a4c8185611a26565b9350611a5c8185602086016117c6565b611a65816117f0565b840191505092915050565b60006020820190508181036000830152611a8a8184611a37565b905092915050565b600080600060608486031215611aab57611aaa6116e5565b5b6000611ab986828701611710565b9350506020611aca868287016119d1565b9250506040611adb868287016119d1565b9150509250925092565b60008115159050919050565b611afa81611ae5565b82525050565b6000602082019050611b156000830184611af1565b92915050565b600060208284031215611b3157611b306116e5565b5b6000611b3f848285016119d1565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611b8857611b87611b48565b5b50565b6000819050611b9982611b77565b919050565b6000611ba982611b8b565b9050919050565b611bb981611b9e565b82525050565b6000602082019050611bd46000830184611bb0565b92915050565b611be3816119a8565b82525050565b6000602082019050611bfe6000830184611bda565b92915050565b611c0d816116ef565b82525050565b6000602082019050611c286000830184611c04565b92915050565b600082825260208201905092915050565b6000611c4a8261177e565b611c548185611c2e565b935083602082028501611c668561179a565b8060005b85811015611ca25784840389528151611c83858261183a565b9450611c8e8361184e565b925060208a01995050600181019050611c6a565b50829750879550505050505092915050565b60006020820190508181036000830152611cce8184611c3f565b905092915050565b60008060408385031215611ced57611cec6116e5565b5b6000611cfb858286016119d1565b9250506020611d0c85828601611710565b9150509250929050565b6000819050919050565b6000611d3b611d36611d3184611988565b611d16565b611988565b9050919050565b6000611d4d82611d20565b9050919050565b6000611d5f82611d42565b9050919050565b611d6f81611d54565b82525050565b6000602082019050611d8a6000830184611d66565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611db557611db4611d90565b5b8235905067ffffffffffffffff811115611dd257611dd1611d95565b5b602083019150836020820283011115611dee57611ded611d9a565b5b9250929050565b60008060208385031215611e0c57611e0b6116e5565b5b600083013567ffffffffffffffff811115611e2a57611e296116ea565b5b611e3685828601611d9f565b92509250509250929050565b600080600060608486031215611e5b57611e5a6116e5565b5b6000611e6986828701611710565b9350506020611e7a868287016119d1565b9250506040611e8b86828701611710565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611eca816116ef565b82525050565b6000611edc8383611ec1565b60208301905092915050565b6000602082019050919050565b6000611f0082611e95565b611f0a8185611ea0565b9350611f1583611eb1565b8060005b83811015611f46578151611f2d8882611ed0565b9750611f3883611ee8565b925050600181019050611f19565b5085935050505092915050565b60006020820190508181036000830152611f6d8184611ef5565b905092915050565b60008083601f840112611f8b57611f8a611d90565b5b8235905067ffffffffffffffff811115611fa857611fa7611d95565b5b602083019150836020820283011115611fc457611fc3611d9a565b5b9250929050565b60008060208385031215611fe257611fe16116e5565b5b600083013567ffffffffffffffff81111561200057611fff6116ea565b5b61200c85828601611f75565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806120bd57607f821691505b6020821081036120d0576120cf612076565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612110826116ef565b915061211b836116ef565b9250828202612129816116ef565b915082820484148315176121405761213f6120d6565b5b5092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026121a97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261216c565b6121b3868361216c565b95508019841693508086168417925050509392505050565b60006121e66121e16121dc846116ef565b611d16565b6116ef565b9050919050565b6000819050919050565b612200836121cb565b61221461220c826121ed565b848454612179565b825550505050565b600090565b61222961221c565b6122348184846121f7565b505050565b5b818110156122585761224d600082612221565b60018101905061223a565b5050565b601f82111561229d5761226e81612147565b6122778461215c565b81016020851015612286578190505b61229a6122928561215c565b830182612239565b50505b505050565b600082821c905092915050565b60006122c0600019846008026122a2565b1980831691505092915050565b60006122d983836122af565b9150826002028217905092915050565b6122f2826117aa565b67ffffffffffffffff81111561230b5761230a612018565b5b61231582546120a5565b61232082828561225c565b600060209050601f8311600181146123535760008415612341578287015190505b61234b85826122cd565b8655506123b3565b601f19841661236186612147565b60005b8281101561238957848901518255600182019150602085019450602081019050612364565b868310156123a657848901516123a2601f8916826122af565b8355505b6001600288020188555050505b505050505050565b60006123c6826116ef565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123f8576123f76120d6565b5b600182019050919050565b600081519050612412816116f9565b92915050565b60006020828403121561242e5761242d6116e5565b5b600061243c84828501612403565b91505092915050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261247157612470612445565b5b80840192508235915067ffffffffffffffff8211156124935761249261244a565b5b6020830192506001820236038313156124af576124ae61244f565b5b509250929050565b600082905092915050565b6124cc83836124b7565b67ffffffffffffffff8111156124e5576124e4612018565b5b6124ef82546120a5565b6124fa82828561225c565b6000601f8311600181146125295760008415612517578287013590505b61252185826122cd565b865550612589565b601f19841661253786612147565b60005b8281101561255f5784890135825560018201915060208501945060208101905061253a565b8683101561257c5784890135612578601f8916826122af565b8355505b6001600288020188555050505b5050505050505056fea26469706673582212209c4348a2de49ba01f782f8125d018e0ce2aa03f9a11e7e8fb52656911518095464736f6c63430008110033";

type ProofofReserveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProofofReserveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProofofReserve__factory extends ContractFactory {
  constructor(...args: ProofofReserveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _balanceToken: PromiseOrValue<string>,
    _epoch: PromiseOrValue<BigNumberish>,
    _auditors: PromiseOrValue<string>[],
    _cwas: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProofofReserve> {
    return super.deploy(
      _balanceToken,
      _epoch,
      _auditors,
      _cwas,
      overrides || {}
    ) as Promise<ProofofReserve>;
  }
  override getDeployTransaction(
    _balanceToken: PromiseOrValue<string>,
    _epoch: PromiseOrValue<BigNumberish>,
    _auditors: PromiseOrValue<string>[],
    _cwas: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _balanceToken,
      _epoch,
      _auditors,
      _cwas,
      overrides || {}
    );
  }
  override attach(address: string): ProofofReserve {
    return super.attach(address) as ProofofReserve;
  }
  override connect(signer: Signer): ProofofReserve__factory {
    return super.connect(signer) as ProofofReserve__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProofofReserveInterface {
    return new utils.Interface(_abi) as ProofofReserveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProofofReserve {
    return new Contract(address, _abi, signerOrProvider) as ProofofReserve;
  }
}
